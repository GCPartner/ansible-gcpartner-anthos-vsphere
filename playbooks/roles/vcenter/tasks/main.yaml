---
- name: Create Facts Dir
  ansible.builtin.file:
    path: /etc/ansible/facts.d
    state: directory
    mode: '0755'

- name: Check that the vcenter_auth.fact exisits
  ansible.builtin.stat:
    path: /etc/ansible/facts.d/vcenter_auth.fact
  register: vcenter_fact

- name: Generate vCenter Passwords and save as Facts
  community.general.ini_file:
    path: /etc/ansible/facts.d/vcenter_auth.fact
    section: general
    option: "{{ item.key }}"
    value: "{{ item.value }}"
  with_dict:
  - vcenter_os_password: "{{ lookup('community.general.random_string', min_lower=1, min_upper=1, min_numeric=1, min_special=1, override_special=special_chars, length=16) }}"
  - vcenter_sso_password: "{{ lookup('community.general.random_string', min_lower=1, min_upper=1, min_numeric=1, min_special=1, override_special=special_chars, length=16) }}"
  when:
  - not vcenter_fact.stat.exists

- name: Re-read facts after adding vcenter_auth fact
  ansible.builtin.setup:
    filter: ansible_local

- name: Download vCenter ISO via GCS
  ansible.builtin.shell:
    chdir: '{{ home_path }}/bootstrap'
    cmd: gcloud auth activate-service-account --key-file={{ home_path }}/bootstrap/gcp_keys/master_sa_key.json
      && gsutil cp gs://{{ object_store_bucket_name }}/{{ vcenter_iso_name}} .
    creates: "{{ home_path }}/bootstrap/{{ vcenter_iso_name}}"
  when: object_store_api == 'gcs'

- name: Download vCenter ISO via S3
  amazon.aws.aws_s3:
    bucket: "{{ object_store_bucket_name }}"
    object: "{{ vcenter_iso_name}}"
    dest: "{{ home_path }}/bootstrap/{{ vcenter_iso_name}}"
    mode: get
    s3_url: "{{ s3_url }}"
    aws_access_key: "{{ s3_access_key }}"
    aws_secret_key: "{{ s3_secret_key }}"
    validate_certs: false
  when: object_store_api == 's3'

- name: Mount vCenter ISO read-only
  ansible.posix.mount:
    path: /mnt
    src: "{{ home_path }}/bootstrap/{{ vcenter_iso_name}}"
    fstype: iso9660
    state: mounted
    opts: exec

- name: Template out the VCVA_a file to /etc/file.conf
  ansible.builtin.template:
    src: vcva_install.j2"
    dest: "{{ home_path }}/bootstrap/vcva_install.json"

#TODO: Mount the vCenter ISO
#      Create a vCenter Deployment Template
#      Deploy vCenter
#      Create Datacenter
#      Create Cluster
#      Add all hosts
#      Configure vSan (Maybe)